// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file message.proto (package p2p, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message as Message$1 } from "@bufbuild/protobuf";

/**
 * Describes the file message.proto.
 */
export const file_message: GenFile = /*@__PURE__*/
  fileDesc("Cg1tZXNzYWdlLnByb3RvEgNwMnAibwoNTWVzc2FnZUhlYWRlchIPCgd2ZXJzaW9uGAEgASgNEhEKCXNlbmRlcl9pZBgCIAEoCRIUCgxtZXNzYWdlX3R5cGUYAyABKAkSEQoJdGltZXN0YW1wGAQgASgDEhEKCXNpZ25hdHVyZRgFIAEoDCIqCgRQaW5nEg8KB25vZGVfaWQYASABKAkSEQoJdGltZXN0YW1wGAIgASgDIioKBFBvbmcSDwoHbm9kZV9pZBgBIAEoCRIRCgl0aW1lc3RhbXAYAiABKAMiHQoIUGVlckxpc3QSEQoJYWRkcmVzc2VzGAEgAygJIj4KB01lc3NhZ2USIgoGaGVhZGVyGAEgASgLMhIucDJwLk1lc3NhZ2VIZWFkZXISDwoHcGF5bG9hZBgCIAEoDCI4Cg1IYW5kc2hha2VJbml0EhYKDndhbGxldF9hZGRyZXNzGAEgASgMEg8KB3BheWxvYWQYAiABKAwiSgoMSGFuZHNoYWtlQWNrEhYKDndhbGxldF9hZGRyZXNzGAEgASgMEg8KB3BheWxvYWQYAiABKAwSEQoJc2lnbmF0dXJlGAMgASgMIiUKEEhhbmRzaGFrZUNvbmZpcm0SEQoJc2lnbmF0dXJlGAEgASgMIhwKDEJ5dGVzTWVzc2FnZRIMCgRkYXRhGAEgASgMQghaBi9wcm90b2IGcHJvdG8z");

/**
 * Common metadata for all messages
 *
 * @generated from message p2p.MessageHeader
 */
export type MessageHeader = Message$1<"p2p.MessageHeader"> & {
  /**
   * Protocol version
   *
   * @generated from field: uint32 version = 1;
   */
  version: number;

  /**
   * Peer/node ID of sender
   *
   * @generated from field: string sender_id = 2;
   */
  senderId: string;

  /**
   * Redundant but human-readable type (e.g., "ping", "block")
   *
   * @generated from field: string message_type = 3;
   */
  messageType: string;

  /**
   * Unix time
   *
   * @generated from field: int64 timestamp = 4;
   */
  timestamp: bigint;

  /**
   * Optional signature for the message
   *
   * @generated from field: bytes signature = 5;
   */
  signature: Uint8Array;
};

/**
 * Describes the message p2p.MessageHeader.
 * Use `create(MessageHeaderSchema)` to create a new message.
 */
export const MessageHeaderSchema: GenMessage<MessageHeader> = /*@__PURE__*/
  messageDesc(file_message, 0);

/**
 * Ping message
 *
 * @generated from message p2p.Ping
 */
export type Ping = Message$1<"p2p.Ping"> & {
  /**
   * @generated from field: string node_id = 1;
   */
  nodeId: string;

  /**
   * @generated from field: int64 timestamp = 2;
   */
  timestamp: bigint;
};

/**
 * Describes the message p2p.Ping.
 * Use `create(PingSchema)` to create a new message.
 */
export const PingSchema: GenMessage<Ping> = /*@__PURE__*/
  messageDesc(file_message, 1);

/**
 * Pong response
 *
 * @generated from message p2p.Pong
 */
export type Pong = Message$1<"p2p.Pong"> & {
  /**
   * @generated from field: string node_id = 1;
   */
  nodeId: string;

  /**
   * @generated from field: int64 timestamp = 2;
   */
  timestamp: bigint;
};

/**
 * Describes the message p2p.Pong.
 * Use `create(PongSchema)` to create a new message.
 */
export const PongSchema: GenMessage<Pong> = /*@__PURE__*/
  messageDesc(file_message, 2);

/**
 * Peer list announcement
 *
 * @generated from message p2p.PeerList
 */
export type PeerList = Message$1<"p2p.PeerList"> & {
  /**
   * @generated from field: repeated string addresses = 1;
   */
  addresses: string[];
};

/**
 * Describes the message p2p.PeerList.
 * Use `create(PeerListSchema)` to create a new message.
 */
export const PeerListSchema: GenMessage<PeerList> = /*@__PURE__*/
  messageDesc(file_message, 3);

/**
 * The main Message wrapper used in P2P
 *
 * @generated from message p2p.Message
 */
export type Message = Message$1<"p2p.Message"> & {
  /**
   * @generated from field: p2p.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * Encoded payload of one of: Ping, Pong, PeerList, Block, Transaction
   *
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;
};

/**
 * Describes the message p2p.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export const MessageSchema: GenMessage<Message> = /*@__PURE__*/
  messageDesc(file_message, 4);

/**
 * @generated from message p2p.HandshakeInit
 */
export type HandshakeInit = Message$1<"p2p.HandshakeInit"> & {
  /**
   * @generated from field: bytes wallet_address = 1;
   */
  walletAddress: Uint8Array;

  /**
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;
};

/**
 * Describes the message p2p.HandshakeInit.
 * Use `create(HandshakeInitSchema)` to create a new message.
 */
export const HandshakeInitSchema: GenMessage<HandshakeInit> = /*@__PURE__*/
  messageDesc(file_message, 5);

/**
 * @generated from message p2p.HandshakeAck
 */
export type HandshakeAck = Message$1<"p2p.HandshakeAck"> & {
  /**
   * @generated from field: bytes wallet_address = 1;
   */
  walletAddress: Uint8Array;

  /**
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;

  /**
   * signature of HandshakeInit
   *
   * @generated from field: bytes signature = 3;
   */
  signature: Uint8Array;
};

/**
 * Describes the message p2p.HandshakeAck.
 * Use `create(HandshakeAckSchema)` to create a new message.
 */
export const HandshakeAckSchema: GenMessage<HandshakeAck> = /*@__PURE__*/
  messageDesc(file_message, 6);

/**
 * @generated from message p2p.HandshakeConfirm
 */
export type HandshakeConfirm = Message$1<"p2p.HandshakeConfirm"> & {
  /**
   * signature of HandshakeAck
   *
   * @generated from field: bytes signature = 1;
   */
  signature: Uint8Array;
};

/**
 * Describes the message p2p.HandshakeConfirm.
 * Use `create(HandshakeConfirmSchema)` to create a new message.
 */
export const HandshakeConfirmSchema: GenMessage<HandshakeConfirm> = /*@__PURE__*/
  messageDesc(file_message, 7);

/**
 * @generated from message p2p.BytesMessage
 */
export type BytesMessage = Message$1<"p2p.BytesMessage"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message p2p.BytesMessage.
 * Use `create(BytesMessageSchema)` to create a new message.
 */
export const BytesMessageSchema: GenMessage<BytesMessage> = /*@__PURE__*/
  messageDesc(file_message, 8);

